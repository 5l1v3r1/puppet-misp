<?php
$config = array (
  'debug' => <%= @debug -%>,
  'site_admin_debug' => <%= @site_admin_debug -%>,
  'Security' =>
    array (
     'level' => '<%= @security_level -%>',
     'salt' => '<%= @salt -%>',
     'cipherSeed' => '<%= @cipherseed -%>',
     <% if (@auth_method != '') then %>
     'auth'=>array('<%= @auth_method -%>'),
     <% else %>
     //'auth'=>array('CertAuth.Certificate'), // additional  authentication methods
     <% end %>
     'password_policy_length' => <%= @password_policy_length -%>,
     'password_policy_complexity' => '<%= @password_policy_complexity -%>',
     ),
  'MISP' =>
    array (
      'baseurl' => 'https://<%= @fqdn -%>',
      'footermidleft' => '<%= @footermidleft -%>',
      'footermidright' => '<%= @footermidright -%>',
      'host_org_id' => '<%= @host_org_id -%>',
      'showorg' => <%= @showorg -%>,
      'background_jobs' => <%= @background_jobs -%>,
      'cached_attachments' => <%= @cached_attachments -%>,
      'email' => '<%= @email -%>',
      'contact' => '<%= @contact -%>',
      'cveurl' => '<%= @cveurl -%>',
      'disablerestalert' => <%= @disablerestalert -%>,
      'default_event_distribution' => '<%= @default_event_distribution -%>',
      'default_attribute_distribution' => '<%= @default_attribute_distribution -%>',
      'tagging' => <%= @tagging -%>,
      'full_tags_on_event_index' => <%= @full_tags_on_event_index -%>,
      'footer_logo' => '<%= @footer_logo -%>',
      'take_ownership_xml_import' => <%= @take_ownership_xml_import -%>,
      'unpublishedprivate' => <%= @unpublishedprivate -%>,
      'disable_emailing' => <%= @disable_emailing -%>,
      'live'  => <%= @live -%>,
    ),
  'GnuPG' =>
    array (
      'onlyencrypted' => false,
      'email' => '<%= @gpg_email -%>',
      'homedir' => '<%= @gpg_homedir -%>',
      'password' => '',
      'bodyonlyencrypted' => false,
    ),
  'SMIME' =>
    array (
      'enabled' => false,
      'email' => '',
      'cert_public_sign' => '',
      'key_sign' => '',
      'password' => '',
    ),
  'Proxy' =>
    array (
      'host' => '',
      'port' => '',
      'method' => '',
      'user' => '',
      'password' => '',
    ),
  'SecureAuth' =>
    array (
      'amount' => <%= @secure_auth_amount -%>,
      'expire' => <%= @secure_auth_expire -%>,
    ),
  'Plugin' =>
    array (
      'Export_services_enable' => <%= @export_services_enable -%>,
      'Export_services_url' => '<%= @export_services_url -%>',
      'Export_services_port' => <%= @export_services_port -%>,
      'Export_timeout' => <%= @export_timeout -%>,
      'Import_services_enable' => <%= @import_services_enable -%>,
      'Import_services_url' => '<%= @import_services_url -%>',
      'Import_services_port' => <%= @import_services_port -%>,
      'Import_timeout' => <%= @import_timeout -%>,
      'Enrichment_services_enable' => <%= @enrichment_services_enable -%>,
      'Enrichment_services_url' => '<%= @enrichment_services_url -%>',
      'Enrichment_services_port' => <%= @enrichment_services_port -%>,
      'Enrichment_timeout' => <%= @enrichment_timeout -%>,
      'Enrichment_hover_enable' => <%= @enrichment_hover_enable -%>,
      'Enrichment_hover_timeout' => <%= @enrichment_hover_timeout -%>,
  ),
  // Uncomment the following to enable client SSL certificate authentication
  /*
  'CertAuth' =>
  array(
    'ca'    => array( 'FIRST.Org' ), // allowed CAs
    'caId'          => 'O',          // which attribute will be used to verify the CA
    'userModel'     => 'User',       // name of the User class to check if user exists
    'userModelKey'  => 'nids_sid',   // User field that will be used for querying
    'map'           => array(        // maps client certificate attributes to User properties
      'O'           => 'org',
      'emailAddress'=>'email',
    ),
    'syncUser'      => true,         // should the User be synchronized with an external REST API
    'userDefaults'=> array(          // default user attributes, only used when creating new users
      'role_id'   => 4,
    ),
    'restApi'       => array(        // API parameters
      'url'         => 'https://example.com/data/users',  // URL to query
      'headers'     => array(),                           // additional headers, used for authentication
      'param'       => array( 'email' => 'email' ),       // query parameters to add to the URL, mapped to User properties
      'map'         =>  array(                            // maps REST result to the User properties
        'uid'       => 'nids_sid',
        'team'      => 'org',
        'email'     => 'email',
        'pgp_public'=> 'gpgkey',
      ),
    ),
    'userDefaults'  => array ( 'role_id' => 3 ),          // default attributes for new users
  ),
  */
    'ApacheShibbAuth'  =>                      // Configuration for shibboleth authentication
      array(
      'MailTag'           => 'ADFS_EMAIL',
      'OrgTag'            => 'ADFS_FEDERATION',
      'GroupTag'          => 'ADFS_GROUP',
      'GroupSeparator'    => ';',
      'GroupRoleMatching' => array(                // 3:User, 1:admin. May be good to set "1" for the first user
        <% egroup_role_match.each do |key,value| -%>
        '<%= key %>' => <%= value %>,
        <% end %>
      ),
      'DefaultOrg'        => <%= @shib_default_org -%>,
    ),

  // Warning: The following is a 3rd party contribution and still untested (including security) by the MISP-project team.
  // Feel free to enable it and report back to us if you run into any issues.
  //
  // Uncomment the following to enable Kerberos authentication
  // needs PHP LDAP support enabled (e.g. compile flag --with-ldap or Debian package php5-ldap)
  /*
   'ApacheSecureAuth' => // Configuration for kerberos authentication
    array(
        'apacheEnv' => 'REMOTE_USER',           // If proxy variable = HTTP_REMOTE_USER
        'ldapServer' => 'ldap://example.com',   // FQDN or IP
        'ldapProtocol' => 3,
        'ldapReaderUser' => 'cn=userWithReadAccess,ou=users,dc=example,dc=com', // DN ou RDN LDAP with reader user right
        'ldapReaderPassword' => 'UserPassword', // the LDAP reader user password
        'ldapDN' => 'dc=example,dc=com',
        'ldapSearchAttribut' => 'uid',          // filter for search
        'ldapFilter' => array(
            'mail',
        ),
        'ldapDefaultRoleId' => 3,               // 3:User, 1:admin. May be good to set "1" for the first user
        'ldapDefaultOrg' => '1',      // uses 1st local org in MISP if undefined
    ),
   */
);
